{"ast":null,"code":"var _jsxFileName = \"/home/eolus/workspace/ai-catalog/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [industries, setIndustries] = useState([]);\n  const [sectors, setSectors] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [painPoints, setPainPoints] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selections, setSelections] = useState({\n    viewMode: '',\n    industries: [],\n    sectors: [],\n    departments: [],\n    painPoints: []\n  });\n  useEffect(() => {\n    fetchIndustries();\n    fetchDepartments();\n  }, []);\n  const fetchIndustries = async () => {\n    try {\n      const response = await fetch('/api/industries');\n      const data = await response.json();\n      setIndustries(data);\n    } catch (error) {\n      console.error('Error fetching industries:', error);\n    }\n  };\n  const fetchSectors = async selectedIndustries => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/sectors', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          industries: selectedIndustries\n        })\n      });\n      const data = await response.json();\n      setSectors(data);\n    } catch (error) {\n      console.error('Error fetching sectors:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchDepartments = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/departments');\n      const data = await response.json();\n      setDepartments(data);\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPainPoints = async (viewMode, selectedItems) => {\n    setLoading(true);\n    try {\n      const endpoint = viewMode === 'sector' ? '/api/sector-painpoints' : '/api/department-painpoints';\n      const body = viewMode === 'sector' ? {\n        sectors: selectedItems\n      } : {\n        departments: selectedItems\n      };\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n      setPainPoints(data);\n    } catch (error) {\n      console.error('Error fetching pain points:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchProjects = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(selections)\n      });\n      const data = await response.json();\n      setProjects(data);\n      if (selections.viewMode === 'department') {\n        setCurrentStep(4);\n      } else {\n        setCurrentStep(5);\n      }\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSkipToDepartments = () => {\n    setSelections({\n      ...selections,\n      viewMode: 'sector'\n    });\n    setCurrentStep(2);\n  };\n  const handleIndustrySelection = industryName => {\n    const newIndustries = selections.industries.includes(industryName) ? selections.industries.filter(i => i !== industryName) : [...selections.industries, industryName];\n    setSelections({\n      ...selections,\n      viewMode: 'sector',\n      industries: newIndustries\n    });\n    if (newIndustries.length > 0) {\n      fetchSectors(newIndustries);\n      setCurrentStep(3);\n    } else {\n      setSectors([]);\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(2);\n    }\n  };\n  const handleSectorSelection = sectorName => {\n    const newSectors = selections.sectors.includes(sectorName) ? selections.sectors.filter(s => s !== sectorName) : [...selections.sectors, sectorName];\n    setSelections({\n      ...selections,\n      sectors: newSectors\n    });\n    if (newSectors.length > 0) {\n      fetchPainPoints('sector', newSectors);\n      setCurrentStep(4);\n    } else {\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(3);\n    }\n  };\n  const handleDepartmentSelection = departmentName => {\n    const newDepartments = selections.departments.includes(departmentName) ? selections.departments.filter(d => d !== departmentName) : [...selections.departments, departmentName];\n    setSelections({\n      ...selections,\n      viewMode: 'department',\n      departments: newDepartments\n    });\n    if (newDepartments.length > 0) {\n      fetchPainPoints('department', newDepartments);\n      setCurrentStep(3);\n    } else {\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(1);\n    }\n  };\n  const handlePainPointSelection = painPointName => {\n    const newPainPoints = selections.painPoints.includes(painPointName) ? selections.painPoints.filter(p => p !== painPointName) : [...selections.painPoints, painPointName];\n    setSelections({\n      ...selections,\n      painPoints: newPainPoints\n    });\n  };\n  const resetSelections = () => {\n    setSelections({\n      viewMode: '',\n      industries: [],\n      sectors: [],\n      departments: [],\n      painPoints: []\n    });\n    setSectors([]);\n    // Don't clear departments - they are base data needed for the initial screen\n    setPainPoints([]);\n    setProjects([]);\n    setCurrentStep(1);\n  };\n  const navigateToStep = stepNumber => {\n    // Only allow navigation to completed steps or current step\n    if (stepNumber > currentStep) return;\n    switch (stepNumber) {\n      case 1:\n        // Go back to initial state - clear everything and reset to department selection\n        resetSelections();\n        break;\n      case 2:\n        if (selections.viewMode === 'sector') {\n          // Go back to industry selection - clear sectors and subsequent selections\n          setSelections({\n            ...selections,\n            sectors: [],\n            painPoints: []\n          });\n          setSectors([]);\n          setPainPoints([]);\n          setProjects([]);\n          setCurrentStep(2);\n        } else if (selections.viewMode === 'department') {\n          // In department mode, step 2 is pain points - clear pain points and projects, go back to step 1\n          setSelections({\n            ...selections,\n            departments: [],\n            painPoints: []\n          });\n          setPainPoints([]);\n          setProjects([]);\n          setCurrentStep(1);\n        }\n        break;\n      case 3:\n        if (selections.viewMode === 'sector') {\n          // Go back to sector selection - clear pain points and projects\n          setSelections({\n            ...selections,\n            painPoints: []\n          });\n          setPainPoints([]);\n          setProjects([]);\n          setCurrentStep(3);\n        } else if (selections.viewMode === 'department') {\n          // In department mode, step 3 is projects - clear projects\n          setProjects([]);\n          setCurrentStep(3);\n        }\n        break;\n      case 4:\n        if (selections.viewMode === 'sector') {\n          // Go back to pain point selection - clear projects\n          setProjects([]);\n          setCurrentStep(4);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'High':\n        return '#e74c3c';\n      case 'Medium':\n        return '#f39c12';\n      default:\n        return '#95a5a6';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Project Catalog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discover AI solutions for Banking & Insurance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep >= 1 ? 'active' : ''} ${currentStep > 1 ? 'clickable' : ''}`,\n        onClick: () => navigateToStep(1),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-label\",\n          children: \"Departments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), selections.viewMode === 'sector' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep >= 2 ? 'active' : ''} ${currentStep > 2 ? 'clickable' : ''}`,\n          onClick: () => navigateToStep(2),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-label\",\n            children: \"Industries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep >= 3 ? 'active' : ''} ${currentStep > 3 ? 'clickable' : ''}`,\n          onClick: () => navigateToStep(3),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-label\",\n            children: \"Sectors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep >= 4 ? 'active' : ''} ${currentStep > 4 ? 'clickable' : ''}`,\n          onClick: () => navigateToStep(4),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-label\",\n            children: \"Pain Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep >= 5 ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-label\",\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), selections.viewMode === 'department' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep >= 3 ? 'active' : ''} ${currentStep > 3 ? 'clickable' : ''}`,\n          onClick: () => navigateToStep(2),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-label\",\n            children: \"Pain Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep >= 4 ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-label\",\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [!selections.viewMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Choose a specific department you're working with, or skip to browse by industry sectors.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-grid\",\n          children: departments.map(department => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `selection-card ${selections.departments.includes(department.name) ? 'selected' : ''}`,\n            onClick: () => handleDepartmentSelection(department.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-icon\",\n              children: \"\\uD83C\\uDFDB\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: department.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)]\n          }, department.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"skip-btn\",\n            onClick: handleSkipToDepartments,\n            children: \"Skip \\u2192 Browse by Industry Sectors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), selections.viewMode === 'sector' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Industries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-grid\",\n          children: industries.map(industry => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `selection-card ${selections.industries.includes(industry.name) ? 'selected' : ''}`,\n            onClick: () => handleIndustrySelection(industry.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-icon\",\n              children: \"\\uD83C\\uDFE6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: industry.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)]\n          }, industry.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), selections.viewMode === 'sector' && sectors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Sectors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-grid\",\n          children: sectors.map(sector => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `selection-card ${selections.sectors.includes(sector.name) ? 'selected' : ''}`,\n            onClick: () => handleSectorSelection(sector.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-icon\",\n              children: \"\\uD83C\\uDFE2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: sector.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this)]\n          }, sector.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), painPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Pain Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-grid\",\n          children: painPoints.map(painPoint => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `selection-card ${selections.painPoints.includes(painPoint.name) ? 'selected' : ''}`,\n            onClick: () => handlePainPointSelection(painPoint.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: painPoint.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this), painPoint.impact && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-badge\",\n              children: [\"Impact: \", painPoint.impact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 21\n            }, this)]\n          }, painPoint.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), selections.painPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"find-projects-btn\",\n            onClick: fetchProjects,\n            disabled: loading,\n            children: loading ? 'Finding Projects...' : 'Find AI Projects'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), projects.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Recommended AI Projects (\", projects.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-btn\",\n            onClick: resetSelections,\n            children: \"Start Over\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-grid\",\n          children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"priority-badge\",\n                style: {\n                  backgroundColor: getPriorityColor(project.priority)\n                },\n                children: project.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"business-case\",\n                children: project.businessCase\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"project-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Sector:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 25\n                  }, this), \" \", project.sector]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 23\n                }, this), project.department && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Department:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 27\n                  }, this), \" \", project.department]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Addresses:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 25\n                  }, this), \" \", project.painPoint]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Blueprint:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this), \" \", project.blueprintTitle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 23\n                }, this), project.budgetRange && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Budget:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 27\n                  }, this), \" \", project.budgetRange]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 25\n                }, this), project.duration && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Duration:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 27\n                  }, this), \" \", project.duration]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, this), project.requiredRoles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roles-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Required Roles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tags\",\n                  children: project.requiredRoles.map((role, roleIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag role-tag\",\n                    children: [typeof role === 'string' ? role : role.name, typeof role === 'object' && role.specialty && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"specialty\",\n                      children: [\" - \", role.specialty]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 479,\n                      columnNumber: 33\n                    }, this)]\n                  }, roleIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 23\n              }, this), project.subModules.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modules-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Key Modules:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tags\",\n                  children: project.subModules.map(module => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag module-tag\",\n                    children: module\n                  }, module, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4/YV+B96iZHJlCyDQMyDpLFDdXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","industries","setIndustries","sectors","setSectors","departments","setDepartments","painPoints","setPainPoints","projects","setProjects","loading","setLoading","currentStep","setCurrentStep","selections","setSelections","viewMode","fetchIndustries","fetchDepartments","response","fetch","data","json","error","console","fetchSectors","selectedIndustries","method","headers","body","JSON","stringify","fetchPainPoints","selectedItems","endpoint","fetchProjects","handleSkipToDepartments","handleIndustrySelection","industryName","newIndustries","includes","filter","i","length","handleSectorSelection","sectorName","newSectors","s","handleDepartmentSelection","departmentName","newDepartments","d","handlePainPointSelection","painPointName","newPainPoints","p","resetSelections","navigateToStep","stepNumber","getPriorityColor","priority","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","department","name","industry","sector","painPoint","impact","disabled","project","index","title","style","backgroundColor","businessCase","blueprintTitle","budgetRange","duration","requiredRoles","role","roleIndex","specialty","subModules","module","_c","$RefreshReg$"],"sources":["/home/eolus/workspace/ai-catalog/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Industry, Sector, Department, PainPoint, Project, SelectionState } from './types';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [industries, setIndustries] = useState<Industry[]>([]);\n  const [sectors, setSectors] = useState<Sector[]>([]);\n  const [departments, setDepartments] = useState<Department[]>([]);\n  const [painPoints, setPainPoints] = useState<PainPoint[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selections, setSelections] = useState<SelectionState>({\n    viewMode: '',\n    industries: [],\n    sectors: [],\n    departments: [],\n    painPoints: []\n  });\n\n  useEffect(() => {\n    fetchIndustries();\n    fetchDepartments();\n  }, []);\n\n  const fetchIndustries = async () => {\n    try {\n      const response = await fetch('/api/industries');\n      const data = await response.json();\n      setIndustries(data);\n    } catch (error) {\n      console.error('Error fetching industries:', error);\n    }\n  };\n\n  const fetchSectors = async (selectedIndustries: string[]) => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/sectors', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ industries: selectedIndustries })\n      });\n      const data = await response.json();\n      setSectors(data);\n    } catch (error) {\n      console.error('Error fetching sectors:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchDepartments = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/departments');\n      const data = await response.json();\n      setDepartments(data);\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPainPoints = async (viewMode: 'sector' | 'department', selectedItems: string[]) => {\n    setLoading(true);\n    try {\n      const endpoint = viewMode === 'sector' ? '/api/sector-painpoints' : '/api/department-painpoints';\n      const body = viewMode === 'sector' \n        ? { sectors: selectedItems }\n        : { departments: selectedItems };\n      \n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n      setPainPoints(data);\n    } catch (error) {\n      console.error('Error fetching pain points:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchProjects = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/projects', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(selections)\n      });\n      const data = await response.json();\n      setProjects(data);\n      if (selections.viewMode === 'department') {\n        setCurrentStep(4);\n      } else {\n        setCurrentStep(5);\n      }\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSkipToDepartments = () => {\n    setSelections({ ...selections, viewMode: 'sector' });\n    setCurrentStep(2);\n  };\n\n  const handleIndustrySelection = (industryName: string) => {\n    const newIndustries = selections.industries.includes(industryName)\n      ? selections.industries.filter(i => i !== industryName)\n      : [...selections.industries, industryName];\n    \n    setSelections({ ...selections, viewMode: 'sector', industries: newIndustries });\n    \n    if (newIndustries.length > 0) {\n      fetchSectors(newIndustries);\n      setCurrentStep(3);\n    } else {\n      setSectors([]);\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(2);\n    }\n  };\n\n  const handleSectorSelection = (sectorName: string) => {\n    const newSectors = selections.sectors.includes(sectorName)\n      ? selections.sectors.filter(s => s !== sectorName)\n      : [...selections.sectors, sectorName];\n    \n    setSelections({ ...selections, sectors: newSectors });\n    \n    if (newSectors.length > 0) {\n      fetchPainPoints('sector', newSectors);\n      setCurrentStep(4);\n    } else {\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(3);\n    }\n  };\n\n  const handleDepartmentSelection = (departmentName: string) => {\n    const newDepartments = selections.departments.includes(departmentName)\n      ? selections.departments.filter(d => d !== departmentName)\n      : [...selections.departments, departmentName];\n    \n    setSelections({ ...selections, viewMode: 'department', departments: newDepartments });\n    \n    if (newDepartments.length > 0) {\n      fetchPainPoints('department', newDepartments);\n      setCurrentStep(3);\n    } else {\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(1);\n    }\n  };\n\n  const handlePainPointSelection = (painPointName: string) => {\n    const newPainPoints = selections.painPoints.includes(painPointName)\n      ? selections.painPoints.filter(p => p !== painPointName)\n      : [...selections.painPoints, painPointName];\n    \n    setSelections({ ...selections, painPoints: newPainPoints });\n  };\n\n  const resetSelections = () => {\n    setSelections({ viewMode: '', industries: [], sectors: [], departments: [], painPoints: [] });\n    setSectors([]);\n    // Don't clear departments - they are base data needed for the initial screen\n    setPainPoints([]);\n    setProjects([]);\n    setCurrentStep(1);\n  };\n\n  const navigateToStep = (stepNumber: number) => {\n    // Only allow navigation to completed steps or current step\n    if (stepNumber > currentStep) return;\n\n    switch (stepNumber) {\n      case 1:\n        // Go back to initial state - clear everything and reset to department selection\n        resetSelections();\n        break;\n\n      case 2:\n        if (selections.viewMode === 'sector') {\n          // Go back to industry selection - clear sectors and subsequent selections\n          setSelections({ ...selections, sectors: [], painPoints: [] });\n          setSectors([]);\n          setPainPoints([]);\n          setProjects([]);\n          setCurrentStep(2);\n        } else if (selections.viewMode === 'department') {\n          // In department mode, step 2 is pain points - clear pain points and projects, go back to step 1\n          setSelections({ ...selections, departments: [], painPoints: [] });\n          setPainPoints([]);\n          setProjects([]);\n          setCurrentStep(1);\n        }\n        break;\n\n      case 3:\n        if (selections.viewMode === 'sector') {\n          // Go back to sector selection - clear pain points and projects\n          setSelections({ ...selections, painPoints: [] });\n          setPainPoints([]);\n          setProjects([]);\n          setCurrentStep(3);\n        } else if (selections.viewMode === 'department') {\n          // In department mode, step 3 is projects - clear projects\n          setProjects([]);\n          setCurrentStep(3);\n        }\n        break;\n\n      case 4:\n        if (selections.viewMode === 'sector') {\n          // Go back to pain point selection - clear projects\n          setProjects([]);\n          setCurrentStep(4);\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'High': return '#e74c3c';\n      case 'Medium': return '#f39c12';\n      default: return '#95a5a6';\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>AI Project Catalog</h1>\n        <p>Discover AI solutions for Banking & Insurance</p>\n      </header>\n\n      <div className=\"progress-bar\">\n        <div \n          className={`step ${currentStep >= 1 ? 'active' : ''} ${currentStep > 1 ? 'clickable' : ''}`}\n          onClick={() => navigateToStep(1)}\n        >\n          <span className=\"step-number\">1</span>\n          <span className=\"step-label\">Departments</span>\n        </div>\n        {selections.viewMode === 'sector' && (\n          <>\n            <div \n              className={`step ${currentStep >= 2 ? 'active' : ''} ${currentStep > 2 ? 'clickable' : ''}`}\n              onClick={() => navigateToStep(2)}\n            >\n              <span className=\"step-number\">2</span>\n              <span className=\"step-label\">Industries</span>\n            </div>\n            <div \n              className={`step ${currentStep >= 3 ? 'active' : ''} ${currentStep > 3 ? 'clickable' : ''}`}\n              onClick={() => navigateToStep(3)}\n            >\n              <span className=\"step-number\">3</span>\n              <span className=\"step-label\">Sectors</span>\n            </div>\n            <div \n              className={`step ${currentStep >= 4 ? 'active' : ''} ${currentStep > 4 ? 'clickable' : ''}`}\n              onClick={() => navigateToStep(4)}\n            >\n              <span className=\"step-number\">4</span>\n              <span className=\"step-label\">Pain Points</span>\n            </div>\n            <div \n              className={`step ${currentStep >= 5 ? 'active' : ''}`}\n            >\n              <span className=\"step-number\">5</span>\n              <span className=\"step-label\">Projects</span>\n            </div>\n          </>\n        )}\n        {selections.viewMode === 'department' && (\n          <>\n            <div \n              className={`step ${currentStep >= 3 ? 'active' : ''} ${currentStep > 3 ? 'clickable' : ''}`}\n              onClick={() => navigateToStep(2)}\n            >\n              <span className=\"step-number\">2</span>\n              <span className=\"step-label\">Pain Points</span>\n            </div>\n            <div \n              className={`step ${currentStep >= 4 ? 'active' : ''}`}\n            >\n              <span className=\"step-number\">3</span>\n              <span className=\"step-label\">Projects</span>\n            </div>\n          </>\n        )}\n      </div>\n\n      <main className=\"main-content\">\n        {/* Step 1: Department Selection or Skip */}\n        {!selections.viewMode && (\n          <div className=\"selection-section\">\n            <h2>Select Department</h2>\n            <p className=\"section-description\">\n              Choose a specific department you're working with, or skip to browse by industry sectors.\n            </p>\n            <div className=\"selection-grid\">\n              {departments.map(department => (\n                <button\n                  key={department.name}\n                  className={`selection-card ${selections.departments.includes(department.name) ? 'selected' : ''}`}\n                  onClick={() => handleDepartmentSelection(department.name)}\n                >\n                  <div className=\"card-icon\">🏛️</div>\n                  <h3>{department.name}</h3>\n                </button>\n              ))}\n            </div>\n            \n            <div className=\"action-buttons\">\n              <button \n                className=\"skip-btn\"\n                onClick={handleSkipToDepartments}\n              >\n                Skip → Browse by Industry Sectors\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Industry Selection (Sector Mode Only) */}\n        {selections.viewMode === 'sector' && (\n          <div className=\"selection-section\">\n            <h2>Select Industries</h2>\n            <div className=\"selection-grid\">\n              {industries.map(industry => (\n                <button\n                  key={industry.name}\n                  className={`selection-card ${selections.industries.includes(industry.name) ? 'selected' : ''}`}\n                  onClick={() => handleIndustrySelection(industry.name)}\n                >\n                  <div className=\"card-icon\">🏦</div>\n                  <h3>{industry.name}</h3>\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Sector Selection (Sector Mode) */}\n        {selections.viewMode === 'sector' && sectors.length > 0 && (\n          <div className=\"selection-section\">\n            <h2>Select Sectors</h2>\n            <div className=\"selection-grid\">\n              {sectors.map(sector => (\n                <button\n                  key={sector.name}\n                  className={`selection-card ${selections.sectors.includes(sector.name) ? 'selected' : ''}`}\n                  onClick={() => handleSectorSelection(sector.name)}\n                >\n                  <div className=\"card-icon\">🏢</div>\n                  <h3>{sector.name}</h3>\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n\n\n        {/* Pain Point Selection */}\n        {painPoints.length > 0 && (\n          <div className=\"selection-section\">\n            <h2>Select Pain Points</h2>\n            <div className=\"selection-grid\">\n              {painPoints.map(painPoint => (\n                <button\n                  key={painPoint.name}\n                  className={`selection-card ${selections.painPoints.includes(painPoint.name) ? 'selected' : ''}`}\n                  onClick={() => handlePainPointSelection(painPoint.name)}\n                >\n                  <div className=\"card-icon\">⚠️</div>\n                  <h3>{painPoint.name}</h3>\n                  {painPoint.impact && (\n                    <div className=\"impact-badge\">\n                      Impact: {painPoint.impact}\n                    </div>\n                  )}\n                </button>\n              ))}\n            </div>\n            \n            {selections.painPoints.length > 0 && (\n              <div className=\"action-buttons\">\n                <button \n                  className=\"find-projects-btn\"\n                  onClick={fetchProjects}\n                  disabled={loading}\n                >\n                  {loading ? 'Finding Projects...' : 'Find AI Projects'}\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Step 5: Project Results */}\n        {projects.length > 0 && (\n          <div className=\"results-section\">\n            <div className=\"results-header\">\n              <h2>Recommended AI Projects ({projects.length})</h2>\n              <button className=\"reset-btn\" onClick={resetSelections}>\n                Start Over\n              </button>\n            </div>\n            \n            <div className=\"projects-grid\">\n              {projects.map((project, index) => (\n                <div key={index} className=\"project-card\">\n                  <div className=\"project-header\">\n                    <h3>{project.title}</h3>\n                    <span \n                      className=\"priority-badge\"\n                      style={{ backgroundColor: getPriorityColor(project.priority) }}\n                    >\n                      {project.priority}\n                    </span>\n                  </div>\n                  \n                  <div className=\"project-details\">\n                    <p className=\"business-case\">{project.businessCase}</p>\n                    \n                    <div className=\"project-meta\">\n                      <div className=\"meta-item\">\n                        <strong>Sector:</strong> {project.sector}\n                      </div>\n                      {project.department && (\n                        <div className=\"meta-item\">\n                          <strong>Department:</strong> {project.department}\n                        </div>\n                      )}\n                      <div className=\"meta-item\">\n                        <strong>Addresses:</strong> {project.painPoint}\n                      </div>\n                      <div className=\"meta-item\">\n                        <strong>Blueprint:</strong> {project.blueprintTitle}\n                      </div>\n                      {project.budgetRange && (\n                        <div className=\"meta-item\">\n                          <strong>Budget:</strong> {project.budgetRange}\n                        </div>\n                      )}\n                      {project.duration && (\n                        <div className=\"meta-item\">\n                          <strong>Duration:</strong> {project.duration}\n                        </div>\n                      )}\n                    </div>\n\n                    {project.requiredRoles.length > 0 && (\n                      <div className=\"roles-section\">\n                        <strong>Required Roles:</strong>\n                        <div className=\"tags\">\n                          {project.requiredRoles.map((role, roleIndex) => (\n                            <span key={roleIndex} className=\"tag role-tag\">\n                              {typeof role === 'string' ? role : role.name}\n                              {typeof role === 'object' && role.specialty && (\n                                <span className=\"specialty\"> - {role.specialty}</span>\n                              )}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {project.subModules.length > 0 && (\n                      <div className=\"modules-section\">\n                        <strong>Key Modules:</strong>\n                        <div className=\"tags\">\n                          {project.subModules.map(module => (\n                            <span key={module} className=\"tag module-tag\">{module}</span>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"loading\">\n            <div className=\"spinner\"></div>\n            <p>Loading...</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}