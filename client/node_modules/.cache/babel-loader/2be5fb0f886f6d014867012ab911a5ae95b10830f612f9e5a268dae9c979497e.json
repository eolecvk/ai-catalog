{"ast":null,"code":"var _jsxFileName = \"/home/eolus/workspace/ai-catalog/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [industries, setIndustries] = useState([]);\n  const [sectors, setSectors] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [painPoints, setPainPoints] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selections, setSelections] = useState({\n    industries: [],\n    sectors: [],\n    departments: [],\n    painPoints: []\n  });\n  useEffect(() => {\n    fetchIndustries();\n  }, []);\n  const fetchIndustries = async () => {\n    try {\n      const response = await fetch('/api/industries');\n      const data = await response.json();\n      setIndustries(data);\n    } catch (error) {\n      console.error('Error fetching industries:', error);\n    }\n  };\n  const fetchSectors = async selectedIndustries => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/sectors', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          industries: selectedIndustries\n        })\n      });\n      const data = await response.json();\n      setSectors(data);\n    } catch (error) {\n      console.error('Error fetching sectors:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchDepartments = async selectedSectors => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/departments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sectors: selectedSectors\n        })\n      });\n      const data = await response.json();\n      setDepartments(data);\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPainPoints = async (selectedSectors, selectedDepartments) => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/painpoints', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sectors: selectedSectors,\n          departments: selectedDepartments\n        })\n      });\n      const data = await response.json();\n      setPainPoints(data);\n    } catch (error) {\n      console.error('Error fetching pain points:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchProjects = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(selections)\n      });\n      const data = await response.json();\n      setProjects(data);\n      setCurrentStep(5);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleIndustrySelection = industryName => {\n    const newIndustries = selections.industries.includes(industryName) ? selections.industries.filter(i => i !== industryName) : [...selections.industries, industryName];\n    setSelections({\n      ...selections,\n      industries: newIndustries\n    });\n    if (newIndustries.length > 0) {\n      fetchSectors(newIndustries);\n    } else {\n      setSectors([]);\n      setDepartments([]);\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(1);\n    }\n  };\n  const handleSectorSelection = sectorName => {\n    const newSectors = selections.sectors.includes(sectorName) ? selections.sectors.filter(s => s !== sectorName) : [...selections.sectors, sectorName];\n    setSelections({\n      ...selections,\n      sectors: newSectors\n    });\n    if (newSectors.length > 0) {\n      fetchDepartments(newSectors);\n      setCurrentStep(3);\n    } else {\n      setDepartments([]);\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(2);\n    }\n  };\n  const handleDepartmentSelection = departmentName => {\n    const newDepartments = selections.departments.includes(departmentName) ? selections.departments.filter(d => d !== departmentName) : [...selections.departments, departmentName];\n    setSelections({\n      ...selections,\n      departments: newDepartments\n    });\n    if (newDepartments.length > 0) {\n      fetchPainPoints(selections.sectors, newDepartments);\n      setCurrentStep(4);\n    } else {\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(3);\n    }\n  };\n  const handlePainPointSelection = painPointName => {\n    const newPainPoints = selections.painPoints.includes(painPointName) ? selections.painPoints.filter(p => p !== painPointName) : [...selections.painPoints, painPointName];\n    setSelections({\n      ...selections,\n      painPoints: newPainPoints\n    });\n  };\n  const resetSelections = () => {\n    setSelections({\n      industries: [],\n      sectors: [],\n      departments: [],\n      painPoints: []\n    });\n    setSectors([]);\n    setDepartments([]);\n    setPainPoints([]);\n    setProjects([]);\n    setCurrentStep(1);\n  };\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'High':\n        return '#e74c3c';\n      case 'Medium':\n        return '#f39c12';\n      default:\n        return '#95a5a6';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Project Catalog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discover AI solutions for Banking & Insurance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep >= 1 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-label\",\n          children: \"Industries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep >= 2 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-label\",\n          children: \"Sectors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep >= 3 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-label\",\n          children: \"Departments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep >= 4 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-label\",\n          children: \"Pain Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep >= 5 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-label\",\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Industries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-grid\",\n          children: industries.map(industry => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `selection-card ${selections.industries.includes(industry.name) ? 'selected' : ''}`,\n            onClick: () => handleIndustrySelection(industry.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-icon\",\n              children: \"\\uD83C\\uDFE6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: industry.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, industry.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), sectors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Sectors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-grid\",\n          children: sectors.map(sector => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `selection-card ${selections.sectors.includes(sector.name) ? 'selected' : ''}`,\n            onClick: () => handleSectorSelection(sector.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-icon\",\n              children: \"\\uD83C\\uDFE2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: sector.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, sector.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), departments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Departments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-grid\",\n          children: departments.map(department => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `selection-card ${selections.departments.includes(department.name) ? 'selected' : ''}`,\n            onClick: () => handleDepartmentSelection(department.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-icon\",\n              children: \"\\uD83C\\uDFDB\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: department.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)]\n          }, department.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), painPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Pain Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-grid\",\n          children: painPoints.map(painPoint => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `selection-card ${selections.painPoints.includes(painPoint.name) ? 'selected' : ''}`,\n            onClick: () => handlePainPointSelection(painPoint.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: painPoint.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), painPoint.impact && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-badge\",\n              children: [\"Impact: \", painPoint.impact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this)]\n          }, painPoint.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), selections.painPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"find-projects-btn\",\n            onClick: fetchProjects,\n            disabled: loading,\n            children: loading ? 'Finding Projects...' : 'Find AI Projects'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), projects.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Recommended AI Projects (\", projects.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-btn\",\n            onClick: resetSelections,\n            children: \"Start Over\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-grid\",\n          children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"priority-badge\",\n                style: {\n                  backgroundColor: getPriorityColor(project.priority)\n                },\n                children: project.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"business-case\",\n                children: project.businessCase\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"project-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Sector:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 25\n                  }, this), \" \", project.sector]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this), project.department && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Department:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 27\n                  }, this), \" \", project.department]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Addresses:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 25\n                  }, this), \" \", project.painPoint]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Blueprint:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 25\n                  }, this), \" \", project.blueprintTitle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this), project.budgetRange && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Budget:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 27\n                  }, this), \" \", project.budgetRange]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 25\n                }, this), project.duration && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meta-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Duration:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 27\n                  }, this), \" \", project.duration]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this), project.requiredRoles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roles-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Required Roles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tags\",\n                  children: project.requiredRoles.map((role, roleIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag role-tag\",\n                    children: [typeof role === 'string' ? role : role.name, typeof role === 'object' && role.specialty && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"specialty\",\n                      children: [\" - \", role.specialty]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 33\n                    }, this)]\n                  }, roleIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this), project.subModules.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modules-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Key Modules:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tags\",\n                  children: project.subModules.map(module => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag module-tag\",\n                    children: module\n                  }, module, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QzvvgBXkoDnkgzNpcxXxf07xbV8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","industries","setIndustries","sectors","setSectors","departments","setDepartments","painPoints","setPainPoints","projects","setProjects","loading","setLoading","currentStep","setCurrentStep","selections","setSelections","fetchIndustries","response","fetch","data","json","error","console","fetchSectors","selectedIndustries","method","headers","body","JSON","stringify","fetchDepartments","selectedSectors","fetchPainPoints","selectedDepartments","fetchProjects","handleIndustrySelection","industryName","newIndustries","includes","filter","i","length","handleSectorSelection","sectorName","newSectors","s","handleDepartmentSelection","departmentName","newDepartments","d","handlePainPointSelection","painPointName","newPainPoints","p","resetSelections","getPriorityColor","priority","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","industry","name","onClick","sector","department","painPoint","impact","disabled","project","index","title","style","backgroundColor","businessCase","blueprintTitle","budgetRange","duration","requiredRoles","role","roleIndex","specialty","subModules","module","_c","$RefreshReg$"],"sources":["/home/eolus/workspace/ai-catalog/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Industry, Sector, Department, PainPoint, Project, SelectionState } from './types';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [industries, setIndustries] = useState<Industry[]>([]);\n  const [sectors, setSectors] = useState<Sector[]>([]);\n  const [departments, setDepartments] = useState<Department[]>([]);\n  const [painPoints, setPainPoints] = useState<PainPoint[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selections, setSelections] = useState<SelectionState>({\n    industries: [],\n    sectors: [],\n    departments: [],\n    painPoints: []\n  });\n\n  useEffect(() => {\n    fetchIndustries();\n  }, []);\n\n  const fetchIndustries = async () => {\n    try {\n      const response = await fetch('/api/industries');\n      const data = await response.json();\n      setIndustries(data);\n    } catch (error) {\n      console.error('Error fetching industries:', error);\n    }\n  };\n\n  const fetchSectors = async (selectedIndustries: string[]) => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/sectors', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ industries: selectedIndustries })\n      });\n      const data = await response.json();\n      setSectors(data);\n    } catch (error) {\n      console.error('Error fetching sectors:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchDepartments = async (selectedSectors: string[]) => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/departments', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sectors: selectedSectors })\n      });\n      const data = await response.json();\n      setDepartments(data);\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPainPoints = async (selectedSectors: string[], selectedDepartments: string[]) => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/painpoints', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sectors: selectedSectors, departments: selectedDepartments })\n      });\n      const data = await response.json();\n      setPainPoints(data);\n    } catch (error) {\n      console.error('Error fetching pain points:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchProjects = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/projects', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(selections)\n      });\n      const data = await response.json();\n      setProjects(data);\n      setCurrentStep(5);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleIndustrySelection = (industryName: string) => {\n    const newIndustries = selections.industries.includes(industryName)\n      ? selections.industries.filter(i => i !== industryName)\n      : [...selections.industries, industryName];\n    \n    setSelections({ ...selections, industries: newIndustries });\n    \n    if (newIndustries.length > 0) {\n      fetchSectors(newIndustries);\n    } else {\n      setSectors([]);\n      setDepartments([]);\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(1);\n    }\n  };\n\n  const handleSectorSelection = (sectorName: string) => {\n    const newSectors = selections.sectors.includes(sectorName)\n      ? selections.sectors.filter(s => s !== sectorName)\n      : [...selections.sectors, sectorName];\n    \n    setSelections({ ...selections, sectors: newSectors });\n    \n    if (newSectors.length > 0) {\n      fetchDepartments(newSectors);\n      setCurrentStep(3);\n    } else {\n      setDepartments([]);\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(2);\n    }\n  };\n\n  const handleDepartmentSelection = (departmentName: string) => {\n    const newDepartments = selections.departments.includes(departmentName)\n      ? selections.departments.filter(d => d !== departmentName)\n      : [...selections.departments, departmentName];\n    \n    setSelections({ ...selections, departments: newDepartments });\n    \n    if (newDepartments.length > 0) {\n      fetchPainPoints(selections.sectors, newDepartments);\n      setCurrentStep(4);\n    } else {\n      setPainPoints([]);\n      setProjects([]);\n      setCurrentStep(3);\n    }\n  };\n\n  const handlePainPointSelection = (painPointName: string) => {\n    const newPainPoints = selections.painPoints.includes(painPointName)\n      ? selections.painPoints.filter(p => p !== painPointName)\n      : [...selections.painPoints, painPointName];\n    \n    setSelections({ ...selections, painPoints: newPainPoints });\n  };\n\n  const resetSelections = () => {\n    setSelections({ industries: [], sectors: [], departments: [], painPoints: [] });\n    setSectors([]);\n    setDepartments([]);\n    setPainPoints([]);\n    setProjects([]);\n    setCurrentStep(1);\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'High': return '#e74c3c';\n      case 'Medium': return '#f39c12';\n      default: return '#95a5a6';\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>AI Project Catalog</h1>\n        <p>Discover AI solutions for Banking & Insurance</p>\n      </header>\n\n      <div className=\"progress-bar\">\n        <div className={`step ${currentStep >= 1 ? 'active' : ''}`}>\n          <span className=\"step-number\">1</span>\n          <span className=\"step-label\">Industries</span>\n        </div>\n        <div className={`step ${currentStep >= 2 ? 'active' : ''}`}>\n          <span className=\"step-number\">2</span>\n          <span className=\"step-label\">Sectors</span>\n        </div>\n        <div className={`step ${currentStep >= 3 ? 'active' : ''}`}>\n          <span className=\"step-number\">3</span>\n          <span className=\"step-label\">Departments</span>\n        </div>\n        <div className={`step ${currentStep >= 4 ? 'active' : ''}`}>\n          <span className=\"step-number\">4</span>\n          <span className=\"step-label\">Pain Points</span>\n        </div>\n        <div className={`step ${currentStep >= 5 ? 'active' : ''}`}>\n          <span className=\"step-number\">5</span>\n          <span className=\"step-label\">Projects</span>\n        </div>\n      </div>\n\n      <main className=\"main-content\">\n        {/* Step 1: Industry Selection */}\n        <div className=\"selection-section\">\n          <h2>Select Industries</h2>\n          <div className=\"selection-grid\">\n            {industries.map(industry => (\n              <button\n                key={industry.name}\n                className={`selection-card ${selections.industries.includes(industry.name) ? 'selected' : ''}`}\n                onClick={() => handleIndustrySelection(industry.name)}\n              >\n                <div className=\"card-icon\">🏦</div>\n                <h3>{industry.name}</h3>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Step 2: Sector Selection */}\n        {sectors.length > 0 && (\n          <div className=\"selection-section\">\n            <h2>Select Sectors</h2>\n            <div className=\"selection-grid\">\n              {sectors.map(sector => (\n                <button\n                  key={sector.name}\n                  className={`selection-card ${selections.sectors.includes(sector.name) ? 'selected' : ''}`}\n                  onClick={() => handleSectorSelection(sector.name)}\n                >\n                  <div className=\"card-icon\">🏢</div>\n                  <h3>{sector.name}</h3>\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Department Selection */}\n        {departments.length > 0 && (\n          <div className=\"selection-section\">\n            <h2>Select Departments</h2>\n            <div className=\"selection-grid\">\n              {departments.map(department => (\n                <button\n                  key={department.name}\n                  className={`selection-card ${selections.departments.includes(department.name) ? 'selected' : ''}`}\n                  onClick={() => handleDepartmentSelection(department.name)}\n                >\n                  <div className=\"card-icon\">🏛️</div>\n                  <h3>{department.name}</h3>\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Step 4: Pain Point Selection */}\n        {painPoints.length > 0 && (\n          <div className=\"selection-section\">\n            <h2>Select Pain Points</h2>\n            <div className=\"selection-grid\">\n              {painPoints.map(painPoint => (\n                <button\n                  key={painPoint.name}\n                  className={`selection-card ${selections.painPoints.includes(painPoint.name) ? 'selected' : ''}`}\n                  onClick={() => handlePainPointSelection(painPoint.name)}\n                >\n                  <div className=\"card-icon\">⚠️</div>\n                  <h3>{painPoint.name}</h3>\n                  {painPoint.impact && (\n                    <div className=\"impact-badge\">\n                      Impact: {painPoint.impact}\n                    </div>\n                  )}\n                </button>\n              ))}\n            </div>\n            \n            {selections.painPoints.length > 0 && (\n              <div className=\"action-buttons\">\n                <button \n                  className=\"find-projects-btn\"\n                  onClick={fetchProjects}\n                  disabled={loading}\n                >\n                  {loading ? 'Finding Projects...' : 'Find AI Projects'}\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Step 5: Project Results */}\n        {projects.length > 0 && (\n          <div className=\"results-section\">\n            <div className=\"results-header\">\n              <h2>Recommended AI Projects ({projects.length})</h2>\n              <button className=\"reset-btn\" onClick={resetSelections}>\n                Start Over\n              </button>\n            </div>\n            \n            <div className=\"projects-grid\">\n              {projects.map((project, index) => (\n                <div key={index} className=\"project-card\">\n                  <div className=\"project-header\">\n                    <h3>{project.title}</h3>\n                    <span \n                      className=\"priority-badge\"\n                      style={{ backgroundColor: getPriorityColor(project.priority) }}\n                    >\n                      {project.priority}\n                    </span>\n                  </div>\n                  \n                  <div className=\"project-details\">\n                    <p className=\"business-case\">{project.businessCase}</p>\n                    \n                    <div className=\"project-meta\">\n                      <div className=\"meta-item\">\n                        <strong>Sector:</strong> {project.sector}\n                      </div>\n                      {project.department && (\n                        <div className=\"meta-item\">\n                          <strong>Department:</strong> {project.department}\n                        </div>\n                      )}\n                      <div className=\"meta-item\">\n                        <strong>Addresses:</strong> {project.painPoint}\n                      </div>\n                      <div className=\"meta-item\">\n                        <strong>Blueprint:</strong> {project.blueprintTitle}\n                      </div>\n                      {project.budgetRange && (\n                        <div className=\"meta-item\">\n                          <strong>Budget:</strong> {project.budgetRange}\n                        </div>\n                      )}\n                      {project.duration && (\n                        <div className=\"meta-item\">\n                          <strong>Duration:</strong> {project.duration}\n                        </div>\n                      )}\n                    </div>\n\n                    {project.requiredRoles.length > 0 && (\n                      <div className=\"roles-section\">\n                        <strong>Required Roles:</strong>\n                        <div className=\"tags\">\n                          {project.requiredRoles.map((role, roleIndex) => (\n                            <span key={roleIndex} className=\"tag role-tag\">\n                              {typeof role === 'string' ? role : role.name}\n                              {typeof role === 'object' && role.specialty && (\n                                <span className=\"specialty\"> - {role.specialty}</span>\n                              )}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {project.subModules.length > 0 && (\n                      <div className=\"modules-section\">\n                        <strong>Key Modules:</strong>\n                        <div className=\"tags\">\n                          {project.subModules.map(module => (\n                            <span key={module} className=\"tag module-tag\">{module}</span>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"loading\">\n            <div className=\"spinner\"></div>\n            <p>Loading...</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}